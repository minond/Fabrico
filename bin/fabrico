#!/bin/bash

# find root of project
while [ ! -d Fabrico ]; do
	cd "$(pwd)/../"

	if [ "$PWD" == "/" ]; then
		echo "fatal: Not a Fabrico project"
		exit
	fi
done

# the move into fabrico directory
cd Fabrico

tests() {
	./vendor/bin/phpunit
}

documentation() {
	./vendor/bin/apigen.php --source lib/ --destination bin/autogen/docs/ --todo \
		--exclude "$PWD/lib/scripts/autoload.php" \
		--exclude "$PWD/lib/scripts/cli.php" \
		--exclude "$PWD/lib/scripts/http.php" \
		--exclude "$PWD/lib/scripts/extension.php"
}

benchmark() {
	ab -c 10 -n 2000 http://localhost/Propositum/Users/viewUsers
}

reportsection() {
	echo -e "\n\n---- ${1}:\n" >> bin/autogen/code/report.txt
}

extension() {
	php ./lib/scripts/extension.php "$@"
}

codequality() {
	# reset dir
	mkdir -p bin/autogen/code
	rm bin/autogen/code/*
	date > bin/autogen/code/report.txt

	# tools can be installing via:
	# pear config-set auto_discover 1
	# pear install pear.phpqatools.org/phpqatools
	reportsection "loc (lib)"
	phploc lib/ | tee bin/autogen/code/loc_lib >> bin/autogen/code/report.txt

	reportsection "loc (tests)"
	phploc tests/ | tee bin/autogen/code/loc_tests.txt >> bin/autogen/code/report.txt

	reportsection cpd
	phpcpd lib/ | tee bin/autogen/code/cpd.txt >> bin/autogen/code/report.txt

	reportsection "code sniffer"
	phpcs lib/ | tee bin/autogen/code/codesniffer.txt >> bin/autogen/code/report.txt
}

view() {
	case "$1" in
		test|tests)
			xdg-open bin/autogen/tests/report/index.html
			;;

		code)
			sensible-browser bin/autogen/code/report.txt
			;;

		doc|docs)
			xdg-open bin/autogen/docs/index.html
			;;
	esac
}

for arg in "$@"
do
	case "$arg" in
		view)
			view $2
			exit 1
			;;

		test|tests)
			tests
			exit 1
			;;

		doc|docs)
			documentation
			exit 1
			;;

		bench)
			benchmark
			exit 1
			;;

		code)
			codequality
			exit 1
			;;

		ext|extension)
			extension $2 $3
			exit 1
			;;

		build)
			clear
			echo "running tests..."
			tests
			echo "done"
			echo "generating code quality..."
			codequality
			echo "done"
			echo "generating documentation..."
			documentation
			echo "done"
			echo "running basic benchmark..."
			benchmark
			echo "done"
			exit 1
			;;
	esac
done

php ./lib/scripts/cli.php "$@"
exit 1
