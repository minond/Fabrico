#!/bin/bash

goto_fabrico() {
	# find root of project
	while [ ! -d .fabrico ]; do
		cd "$(pwd)/../"

		if [ "$PWD" == "/" ]; then
			echo "fatal: Fabrico module not found"
			exit
		fi
	done

	# the move into fabrico directory
	cd .fabrico
}

tests() {
	goto_fabrico
	./vendor/bin/phpunit
}

documentation() {
	goto_fabrico
	./vendor/bin/apigen.php --source lib/ --destination bin/autogen/docs/ --todo \
		--exclude "$PWD/lib/scripts/app.php" \
		--exclude "$PWD/lib/scripts/autoload.php" \
		--exclude "$PWD/lib/scripts/extension.php" \
		--exclude "$PWD/lib/scripts/help.php" \
		--exclude "$PWD/lib/scripts/http.php"
}

benchmark() {
	ab -c 10 -n 2000 http://localhost/Propositum/Users/viewUsers
}

reportsection() {
	goto_fabrico
	echo -e "\n\n---- ${1}:\n" >> bin/autogen/code/report.txt
}

codequality() {
	goto_fabrico

	# reset dir
	if [ -d bin/autogen/code ]; then
		rm -r  bin/autogen/code
	fi

	mkdir -p bin/autogen/code
	date > bin/autogen/code/report.txt

	# tools can be installing via:
	# pear config-set auto_discover 1
	# pear install pear.phpqatools.org/phpqatools
	reportsection "loc (lib)"
	phploc lib/ | tee bin/autogen/code/loc_lib >> bin/autogen/code/report.txt

	reportsection "loc (tests)"
	phploc tests/ | tee bin/autogen/code/loc_tests.txt >> bin/autogen/code/report.txt

	reportsection cpd
	phpcpd lib/ | tee bin/autogen/code/cpd.txt >> bin/autogen/code/report.txt

	reportsection "code sniffer"
	phpcs lib/ | tee bin/autogen/code/codesniffer.txt >> bin/autogen/code/report.txt
}

view() {
	goto_fabrico

	case "$1" in
		test|tests)
			xdg-open bin/autogen/tests/report/index.html
			;;

		code)
			sensible-browser bin/autogen/code/report.txt
			;;

		doc|docs)
			xdg-open bin/autogen/docs/index.html
			;;
	esac
}

case "$1" in
	view)
		view $2
		exit 1
		;;

	test|tests)
		tests
		exit 1
		;;

	doc|docs)
		documentation
		exit 1
		;;

	bench)
		benchmark
		exit 1
		;;

	code)
		codequality
		exit 1
		;;

	create)
		mkdir $2
		cd $2

		echo "Downloading Fabrico..."
		git init
		git submodule add git@github.com:minond/Fabrico .fabrico
		git submodule init

		echo -e "\nInstalling Fabrico..."
		cd .fabrico
		composer install --no-ansi

		cd ..
		$0 init $2

		exit 1
		;;

	init|initialize)
		goto_fabrico

		# project structure
		cp -r ./bin/project/* ../

		# namespace
		if [ ! "$2" ]; then
			echo -n 'Base namespace: '
			read namespace
		else
			namespace=$2
		fi

		sed "s/%Namespace%/$namespace/g" ./bin/project/config/project.yaml > ../config/project.yaml
		sed "s/%Namespace%/$namespace/g" ./bin/project/controller/Hello.php > ../controller/Hello.php

		echo "Initialized new Fabrico project -> config/project.yaml:$namespace"
		exit 1
		;;

	ext|extension)
		goto_fabrico
		php ./lib/scripts/extension.php $2 $3
		exit 1
		;;

	build)
		echo "running tests..."
		tests
		echo "done"

		echo "generating code quality..."
		codequality
		echo "done"

		echo "generating documentation..."
		documentation
		echo "done"

		exit 1
		;;

	server|run)
		goto_fabrico
		php -S localhost:8080 -t .. lib/scripts/server.php
		exit 1
		;;

	*)
		echo "invalid argument"
		exit 1
		;;
esac
